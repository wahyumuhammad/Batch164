@model MiniProject.ViewModel.MMenuVM

@using (Html.BeginForm("Add", "MMenu", FormMethod.Post, htmlAttributes: new { @id = "form-m_menu" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.code, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @OnFocusOut="ceknama()"} })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.controller, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.controller, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.controller, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.parent_id, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownList("name", (IEnumerable<SelectListItem>)ViewBag.ListParent, "-Select Menu Name-", new { @class = "column_filter form-control select2" })
                @*@Html.EditorFor(model => model.parent_id, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.parent_id, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.is_active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.is_active, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.is_active, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.created_by, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.created_by, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.created_by, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.created_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.created_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.created_date, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="modal-footer">
            <button type="submit" class="btn btn-info btn-sm">Save</button>
            <button type="button" class="btn btn-warning btn-sm" onclick="back()">Cancel</button>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
